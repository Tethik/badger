# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: show python version
          command: |
            python --version
            ls

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "dev-requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r dev-requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "dev-requirements.txt" }}

      - run:
          name: install the package
          command: |
            . venv/bin/activate
            python setup.py install
        
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            py.test --junit-xml /tmp/test-results/junit.xml --cov=badger --cov-report=xml:/tmp/test-results/coverage.xml --cov-report=html:/tmp/test-results/coverage --cov-branch

      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-reports

      - store_artifacts:
          path: /tmp/badges
          destination: badges

      - run:
          name: badges directory
          command: mkdir /tmp/badges

      - run:
          name: create build badge
          command: |
            . venv/bin/activate
            badger build failed -o /tmp/badges/build.svg
          when: on_fail

      - run:
          name: create build success badge
          command: |
            . venv/bin/activate
            badger build success -o /tmp/badges/build.svg
          when: on_success

      - run:
          name: create test coverage badge
          command: |
            . venv/bin/activate
            python .circleci/coverage.py /tmp/test-results/coverage.xml /tmp/badges/coverage.svg

